<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:OuinexDesktop.ViewModels"
		     x:DataType="vm:MarketWatchViewModel"
			 xmlns:converters="using:OuinexDesktop.Converters"
			 xmlns:material="using:Material.Icons.Avalonia"
			 xmlns:models="using:OuinexDesktop.Models"
			 mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="OuinexDesktop.Views.Controls.MarketWatchWidgets">
	<UserControl.Resources>
		<converters:TickToBrushConverter x:Key="tickConverter"/>
		<converters:PercentRangeUpConverter x:Key="upArrowConverter"/>
		<converters:PercentRangeDownConverter x:Key="downArrowConverter"/>
		<converters:TickToForegroundConverter x:Key="tickForegournConverter"/>
		<converters:DecimalToStringConverter x:Key="DecimalToStringConverter"/>
	</UserControl.Resources>
	<UserControl.Styles>
		<Styles>
			<Styles.Resources>
				<Template x:Key="down">
					<Path Fill="#EC5656"
					      Stretch="Uniform"
					      Data="M16,18L18.29,15.71L13.41,10.83L9.41,14.83L2,7.41L3.41,6L9.41,12L13.41,8L19.71,14.29L22,12V18H16Z"/>
				</Template>
				<Template x:Key="up">
					<Path Fill="#34a560"
						  Stretch="Uniform"
						  Data="M16,6L18.29,8.29L13.41,13.17L9.41,9.17L2,16.59L3.41,18L9.41,12L13.41,16L19.71,9.71L22,12V6H16Z"/>
				</Template>
			</Styles.Resources>
			<Style Selector="Border.Up">
				<Style.Animations>
					<Animation Duration="0:0:1"
							   Easing="QuadraticEaseInOut"
							   IterationCount="Infinite">
						<KeyFrame Cue="50%">
							<Setter Property="ScaleTransform.ScaleX" Value="0.8"/>
							<Setter Property="ScaleTransform.ScaleY" Value="0.8"/>
						</KeyFrame>
					</Animation>
				</Style.Animations>
				<Setter Property="Child" Value="{StaticResource up}"/>
			</Style>
			
			<Style Selector="Border.Down">
				<Style.Animations>
					<Animation Duration="0:0:1"
							   Easing="QuadraticEaseInOut"
							   IterationCount="Infinite">
						<KeyFrame Cue="50%">
							<Setter Property="ScaleTransform.ScaleX" Value="0.8"/>
							<Setter Property="ScaleTransform.ScaleY" Value="0.8"/>
						</KeyFrame>
					</Animation>
				</Style.Animations>
				<Setter Property="Child" Value="{StaticResource down}"/>
			</Style>
		</Styles>
	</UserControl.Styles>	               
	<Design.DataContext>
		<vm:MarketWatchViewModel/>
	</Design.DataContext>
	<Border>
		<Grid RowDefinitions="auto,*">
			<StackPanel Orientation="Horizontal">
				<Button Content="Trading List"
						Margin="3"
						Classes="Small"
						HorizontalAlignment="Left">
					<Button.Flyout >
						<Flyout Placement="BottomEdgeAlignedLeft">
							<Grid RowDefinitions="auto,auto, *"
								  Height="250">
								<StackPanel Orientation="Horizontal">
									<Border HorizontalAlignment="Left"
											Theme="{StaticResource RadioButtonGroupBorder}">
										<StackPanel Orientation="Horizontal">
											<RadioButton Theme="{DynamicResource ButtonRadioButton}"
														 IsChecked="true"
														 Classes="Small"
														 Name="spotChecker">
												All
											</RadioButton>
											<RadioButton Classes="Small"
												Theme="{DynamicResource ButtonRadioButton}">
												<StackPanel Orientation="Horizontal">
													<material:MaterialIcon Kind="Star"
																		   Foreground="Orange"
																		   Margin="3"/>
													<TextBlock Text="Favorites"
															   VerticalAlignment="Center"/>
												</StackPanel>
											</RadioButton>
											<RadioButton Classes="Small"
												Theme="{DynamicResource ButtonRadioButton}">
												<StackPanel Orientation="Horizontal">
													<material:MaterialIcon Kind="Bitcoin"
																		   Foreground="Orange"
																		   Margin="3"/>
													<TextBlock Text="BTC"
															   VerticalAlignment="Center"/>
												</StackPanel>
											</RadioButton>
											<RadioButton Classes="Small"
												Theme="{DynamicResource ButtonRadioButton}">
												<StackPanel Orientation="Horizontal">
													<material:MaterialIcon Kind="Ethereum"
																		   Foreground="Orange"
																		   Margin="3"/>
													<TextBlock Text="Ethereum"
															   VerticalAlignment="Center"/>
												</StackPanel>
											</RadioButton>
										</StackPanel>
									</Border>
									<Button ToolTip.Tip="Create a new list"
											Classes="Small"
											Margin="3,0">
										<material:MaterialIcon Kind="Plus"/>
									</Button>
									<Button ToolTip.Tip="Delete selection">
										<material:MaterialIcon Kind="Trash"
															   Foreground="OrangeRed"/>
									</Button>
								</StackPanel>
								<TextBox Watermark="Search ..."
										 Name="searchSymbol"
										 Classes="Small Bordered"
										 Margin="3"
										 Grid.Row="1"/>
								<Panel Grid.Row="2">
									<DataGrid Name="allSymbolsGrid"
											  SelectionMode="Single"
											  IsReadOnly="True"
											  SelectedItem="{Binding SelectedSymbol, Mode=TwoWay}"
											  AutoGenerateColumns="True">
										<DataGrid.Columns>
											<DataGridTemplateColumn DisplayIndex="2">
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<Button ToolTip.Tip="Add to the current list"
																Margin="2">
															<material:MaterialIcon Kind="PlusCircle"/>
														</Button>
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
											</DataGridTemplateColumn>
										</DataGrid.Columns>
									</DataGrid>
								</Panel>
							</Grid>
						</Flyout>
					</Button.Flyout>
				</Button>
				<AutoCompleteBox MinWidth="140"
								 Watermark="Search a symbol ..."
								 Classes="Small Bordered ClearButton" 
								 ValueMemberBinding="{ReflectionBinding FullName}"
								 Name="searchBox">
					<AutoCompleteBox.ItemTemplate>
						<DataTemplate DataType="models:Symbol">
							<TextBlock Text="{Binding FullName}"/>
						</DataTemplate>
					</AutoCompleteBox.ItemTemplate>
				</AutoCompleteBox>
			</StackPanel>
			
			
			<TabControl Grid.Row="1">
				<TabItem Header="Simple dealing rates"
						 Name="test">
					<Border>
						<DataGrid AutoGenerateColumns="False"
								  Name="ratesGrid"
								  Height="NaN"
								  SelectionMode="Single"
								  SelectedItem="{Binding SelectedTicker, Mode=TwoWay}"
								  Items="{Binding Tickers}">
							<DataGrid.Columns>
								<DataGridTextColumn Header="Ticker"
													FontWeight="DemiBold"
													FontSize="12"
													Binding="{Binding TickerName }">
								</DataGridTextColumn>
								<DataGridTemplateColumn Header="Bid" >
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Border Background="{Binding BidColor, Converter={StaticResource
											tickConverter}}"
													Height="20"
													CornerRadius="3"
													Margin="1">
												<TextBlock Text="{Binding Bid, Converter={StaticResource DecimalToStringConverter}}"
														   FontSize="12"
														   Foreground="{Binding BidColor, Converter={StaticResource ResourceKey=tickForegournConverter}}"
														   Margin="3,0"
														   HorizontalAlignment="Right"
														   VerticalAlignment="Center"/>
											</Border>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="Ask">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Border Background="{Binding AskColor, Converter={StaticResource ResourceKey=tickConverter}}"
													Height="20"
													CornerRadius="3"
													Margin="1">
												<TextBlock Text="{Binding Ask, Converter={StaticResource DecimalToStringConverter}}"
														   Foreground="{Binding AskColor, Converter={StaticResource ResourceKey=tickForegournConverter}}"
														   FontSize="12"
														   Margin="3,0"
														   HorizontalAlignment="Right"
														   VerticalAlignment="Center"/>
											</Border>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="Spread">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Border Margin="1">
												<TextBlock Text="{Binding Spread, Converter={StaticResource DecimalToStringConverter}}"
														   FontSize="12"
														   Margin="3,0"
														   HorizontalAlignment="Right"
														   VerticalAlignment="Center"/>
											</Border>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="% Change">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Border	Margin="1">
												<TextBlock Text="{Binding PercentChange}"
														   FontSize="12"
														   Foreground="{Binding ChangeColor, Converter={StaticResource  ResourceKey=tickConverter}}"
														   Margin="3,0"
														   FontWeight="DemiBold"
														   HorizontalAlignment="Right"
														   VerticalAlignment="Center"/>
											</Border>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="High">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Border Margin="1">
												<Grid ColumnDefinitions="auto, *">
													<Border Classes="Up"
															IsVisible="{Binding PercentRange, Converter={StaticResource  ResourceKey=upArrowConverter}}"
															Height="12"
															Margin="3,0"/>
													<TextBlock Text="{Binding High, Converter={StaticResource DecimalToStringConverter}}"
															   FontSize="10"
															   Grid.Column="1"
															   Margin="3,0"
															   HorizontalAlignment="Right"
															   VerticalAlignment="Center"/>
												</Grid>
											</Border>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="Low">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Border Margin="1">
												<Grid ColumnDefinitions="auto, *">
													<Border Classes="Down"
															IsVisible="{Binding PercentRange, Converter={StaticResource  ResourceKey=downArrowConverter}}"
															Height="12"
															Margin="3,0"/>
													<TextBlock Text="{Binding Low, Converter={StaticResource DecimalToStringConverter}}"
															   FontSize="10"
															   Grid.Column="1"
															   Margin="3,0"
															   HorizontalAlignment="Right"
															   VerticalAlignment="Center"/>
												</Grid>
											</Border>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>

							</DataGrid.Columns>
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Open a chart">
										<MenuItem Header="1 minute"
												  Command="{Binding OpenChartCommand}"/>
										<MenuItem Header="5 minutes"
												  Command="{Binding OpenChartCommand}"/>
										<MenuItem Header="15 minutes"
												  Command="{Binding OpenChartCommand}"/>
										<MenuItem Header="30 minutes"
												  Command="{Binding OpenChartCommand}"/>
									</MenuItem>
									<MenuItem Header="Setup an alert"/>
								</ContextMenu>
							</DataGrid.ContextMenu>
						</DataGrid>

					</Border>
				</TabItem>
				<TabItem Header="Advanced dealing rates">
					<ItemsControl Items="{Binding Tickers}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Border Classes="Hover"
										x:DataType="vm:TickerViewModel"
										Padding="2"
										Width="300"
										Theme="{StaticResource CardBorder}">
									<Grid ColumnDefinitions="*,*"
										  VerticalAlignment="Center"
										  RowDefinitions="auto,auto,auto,*">
										<Path Data="M0.5,0.5 L168.5,0.5 168.5,44.5 118.5,44.5 118.5,75.5 0.5,75.5 0.5,44.5 z"
											  Stroke="#1C1F23"
											  Grid.Row="1"
											  Margin="0,0,1.5,0"
											  Fill="{Binding BidColor, Converter={StaticResource tickConverter}}"
											  Stretch="Uniform"
											  Height="100"/>
										<Path Data="M0.5,0.5 L168.5,0.5 168.5,44.5 118.5,44.5 118.5,75.5 0.5,75.5 0.5,44.5 z"
											  Stroke="#1C1F23"
											  Grid.Row="1"
											  Margin="1.5,0,0,0"
											  Grid.Column="1"
											  Fill="{Binding AskColor, Converter={StaticResource tickConverter}}"
											  Height="100"
											  Stretch="Uniform">
											<Path.RenderTransform>
												<TransformGroup>
													<ScaleTransform ScaleX="-1"/>
													<SkewTransform/>
													<RotateTransform/>
													<TranslateTransform/>
												</TransformGroup>
											</Path.RenderTransform>
										</Path>
										<Label Content="{Binding Symbol.FullName}"
											   FontWeight="Bold"
											   Foreground="White"
											   Padding="5"
											   Margin="0,0,1.5,0"
											   FontSize="15"
											   Background="Black"/>
									</Grid>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</TabItem>
			</TabControl>
		</Grid>
	</Border>
</UserControl>
